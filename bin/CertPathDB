#!/bin/bash
# CertPathDB
# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}
if [ $# -ne 1 ]; then
  usage
  exit 1
fi
# Parse argument.  $1 is the first argument
case $1 in
  "create")
    if test -f "var/CertPathwayDB.sqlite3"; 
        then
            echo "DB already exists."
        else
            echo "+ sqlite3 var/CertPathwayDB.sqlite3 < sql/schema.sql"
            sqlite3 var/CertPathwayDB.sqlite3 < sql/schema.sql
            echo "+ sqlite3 var/CertPathwayDB.sqlite3 < sql/data.sql"
            sqlite3 var/CertPathwayDB.sqlite3 < sql/data.sql
    fi
    ;;
  "destroy")
    echo "+ rm -rf var/CertPathwayDB.sqlite3"
    rm -rf var/CertPathwayDB.sqlite3
    ;;
  "reset")
    echo "+ sqlite3 var/CertPathwayDB.sqlite3 < sql/schema.sql"
    sqlite3 var/CertPathwayDB.sqlite3 < sql/schema.sql
    echo "+ sqlite3 var/CertPathwayDB.sqlite3 < sql/data.sql"
    sqlite3 var/CertPathwayDB.sqlite3 < sql/data.sql
    ;;
  "dump")
    echo "+ sqlite3 -batch -line var/CertPathwayDB.sqlite3 'SELECT * FROM comments'"
    sqlite3 -batch -line var/CertPathwayDB.sqlite3 'SELECT * FROM comments'
    echo "+ sqlite3 -batch -line var/CertPathwayDB.sqlite3 'SELECT * FROM following'"
    sqlite3 -batch -line var/CertPathwayDB.sqlite3 'SELECT * FROM following'
    echo "+ sqlite3 -batch -line var/CertPathwayDB.sqlite3 'SELECT * FROM likes'"
    sqlite3 -batch -line var/CertPathwayDB.sqlite3 'SELECT * FROM likes'
    echo "+ sqlite3 -batch -line var/CertPathwayDB.sqlite3 'SELECT * FROM posts'"
    sqlite3 -batch -line var/CertPathwayDB.sqlite3 'SELECT * FROM posts'
    echo "+ sqlite3 -batch -line var/CertPathwayDB.sqlite3 'SELECT * FROM users'"
    sqlite3 -batch -line var/CertPathwayDB.sqlite3 'SELECT * FROM users'
    ;;
  *)
    usage
    exit 1
    ;;
esac